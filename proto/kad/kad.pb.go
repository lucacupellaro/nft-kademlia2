// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/kad.proto

package kad

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host          string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_proto_kad_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Node) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_proto_kad_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type NFTValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bytes         []byte                 `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NFTValue) Reset() {
	*x = NFTValue{}
	mi := &file_proto_kad_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NFTValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTValue) ProtoMessage() {}

func (x *NFTValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTValue.ProtoReflect.Descriptor instead.
func (*NFTValue) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{2}
}

func (x *NFTValue) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type StoreReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Node                  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Key           *Key                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         *NFTValue              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	TtlSecs       int32                  `protobuf:"varint,4,opt,name=ttl_secs,json=ttlSecs,proto3" json:"ttl_secs,omitempty"` // opzionale
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreReq) Reset() {
	*x = StoreReq{}
	mi := &file_proto_kad_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreReq) ProtoMessage() {}

func (x *StoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreReq.ProtoReflect.Descriptor instead.
func (*StoreReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{3}
}

func (x *StoreReq) GetFrom() *Node {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *StoreReq) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StoreReq) GetValue() *NFTValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StoreReq) GetTtlSecs() int32 {
	if x != nil {
		return x.TtlSecs
	}
	return 0
}

type StoreRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreRes) Reset() {
	*x = StoreRes{}
	mi := &file_proto_kad_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRes) ProtoMessage() {}

func (x *StoreRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRes.ProtoReflect.Descriptor instead.
func (*StoreRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{4}
}

func (x *StoreRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetNodeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequesterId   string                 `protobuf:"bytes,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeListReq) Reset() {
	*x = GetNodeListReq{}
	mi := &file_proto_kad_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListReq) ProtoMessage() {}

func (x *GetNodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListReq.ProtoReflect.Descriptor instead.
func (*GetNodeListReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodeListReq) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type GetNodeListRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // qui specifichi che Ã¨ una lista di Node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeListRes) Reset() {
	*x = GetNodeListRes{}
	mi := &file_proto_kad_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListRes) ProtoMessage() {}

func (x *GetNodeListRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListRes.ProtoReflect.Descriptor instead.
func (*GetNodeListRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{6}
}

func (x *GetNodeListRes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type LookupNFTReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        string                 `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"` // id del nodo che fa la richiesta (per logging)
	Key           *Key                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                     // chiave NFT (20 byte come fai tu)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupNFTReq) Reset() {
	*x = LookupNFTReq{}
	mi := &file_proto_kad_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupNFTReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupNFTReq) ProtoMessage() {}

func (x *LookupNFTReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupNFTReq.ProtoReflect.Descriptor instead.
func (*LookupNFTReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{7}
}

func (x *LookupNFTReq) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *LookupNFTReq) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type LookupNFTRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`    // true se presente su questo nodo
	Holder        *Node                  `protobuf:"bytes,2,opt,name=holder,proto3" json:"holder,omitempty"`   // questo nodo (se found=true)
	Value         *NFTValue              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`     // il contenuto (json bytes) se found=true
	Nearest       []*Node                `protobuf:"bytes,4,rep,name=nearest,proto3" json:"nearest,omitempty"` // suggerimento nodi piÃ¹ vicini se non trovato
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupNFTRes) Reset() {
	*x = LookupNFTRes{}
	mi := &file_proto_kad_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupNFTRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupNFTRes) ProtoMessage() {}

func (x *LookupNFTRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupNFTRes.ProtoReflect.Descriptor instead.
func (*LookupNFTRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{8}
}

func (x *LookupNFTRes) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *LookupNFTRes) GetHolder() *Node {
	if x != nil {
		return x.Holder
	}
	return nil
}

func (x *LookupNFTRes) GetValue() *NFTValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *LookupNFTRes) GetNearest() []*Node {
	if x != nil {
		return x.Nearest
	}
	return nil
}

type GetKBucketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequesterId   string                 `protobuf:"bytes,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"` // opzionale, per logging o debugging
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKBucketReq) Reset() {
	*x = GetKBucketReq{}
	mi := &file_proto_kad_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKBucketReq) ProtoMessage() {}

func (x *GetKBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKBucketReq.ProtoReflect.Descriptor instead.
func (*GetKBucketReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{9}
}

func (x *GetKBucketReq) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type GetKBucketResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // la lista dei nodi conosciuti
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKBucketResp) Reset() {
	*x = GetKBucketResp{}
	mi := &file_proto_kad_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKBucketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKBucketResp) ProtoMessage() {}

func (x *GetKBucketResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKBucketResp.ProtoReflect.Descriptor instead.
func (*GetKBucketResp) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{10}
}

func (x *GetKBucketResp) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type PingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Node                  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // chi sta pingando (X)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReq) Reset() {
	*x = PingReq{}
	mi := &file_proto_kad_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReq) ProtoMessage() {}

func (x *PingReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReq.ProtoReflect.Descriptor instead.
func (*PingReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{11}
}

func (x *PingReq) GetFrom() *Node {
	if x != nil {
		return x.From
	}
	return nil
}

type PingRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`                       // true = sono vivo
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`  // mio id (Y)
	UnixMs        int64                  `protobuf:"varint,3,opt,name=unix_ms,json=unixMs,proto3" json:"unix_ms,omitempty"` // timestamp server
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRes) Reset() {
	*x = PingRes{}
	mi := &file_proto_kad_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRes) ProtoMessage() {}

func (x *PingRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRes.ProtoReflect.Descriptor instead.
func (*PingRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{12}
}

func (x *PingRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PingRes) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PingRes) GetUnixMs() int64 {
	if x != nil {
		return x.UnixMs
	}
	return 0
}

type UpdateBucketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contact       *Node                  `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBucketReq) Reset() {
	*x = UpdateBucketReq{}
	mi := &file_proto_kad_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketReq) ProtoMessage() {}

func (x *UpdateBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketReq.ProtoReflect.Descriptor instead.
func (*UpdateBucketReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateBucketReq) GetContact() *Node {
	if x != nil {
		return x.Contact
	}
	return nil
}

type UpdateBucketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBucketRes) Reset() {
	*x = UpdateBucketRes{}
	mi := &file_proto_kad_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBucketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketRes) ProtoMessage() {}

func (x *UpdateBucketRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketRes.ProtoReflect.Descriptor instead.
func (*UpdateBucketRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateBucketRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RebalanceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      string                 `protobuf:"bytes,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // id del nodo che deve ribilanciarsi
	Nodes         []*Node                `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`                       // lista nodi attivi
	K             int32                  `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`                              // (opzionale) fattore di replica
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebalanceReq) Reset() {
	*x = RebalanceReq{}
	mi := &file_proto_kad_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceReq) ProtoMessage() {}

func (x *RebalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceReq.ProtoReflect.Descriptor instead.
func (*RebalanceReq) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{15}
}

func (x *RebalanceReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RebalanceReq) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *RebalanceReq) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

type RebalanceRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Moved         int32                  `protobuf:"varint,1,opt,name=moved,proto3" json:"moved,omitempty"`    // quanti NFT spostati
	Kept          int32                  `protobuf:"varint,2,opt,name=kept,proto3" json:"kept,omitempty"`      // quanti NFT mantenuti
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // log di riepilogo
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebalanceRes) Reset() {
	*x = RebalanceRes{}
	mi := &file_proto_kad_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebalanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceRes) ProtoMessage() {}

func (x *RebalanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kad_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceRes.ProtoReflect.Descriptor instead.
func (*RebalanceRes) Descriptor() ([]byte, []int) {
	return file_proto_kad_proto_rawDescGZIP(), []int{16}
}

func (x *RebalanceRes) GetMoved() int32 {
	if x != nil {
		return x.Moved
	}
	return 0
}

func (x *RebalanceRes) GetKept() int32 {
	if x != nil {
		return x.Kept
	}
	return 0
}

func (x *RebalanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_kad_proto protoreflect.FileDescriptor

const file_proto_kad_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/kad.proto\x12\x03kad\">\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\"\x17\n" +
	"\x03Key\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\" \n" +
	"\bNFTValue\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\fR\x05bytes\"\x85\x01\n" +
	"\bStoreReq\x12\x1d\n" +
	"\x04from\x18\x01 \x01(\v2\t.kad.NodeR\x04from\x12\x1a\n" +
	"\x03key\x18\x02 \x01(\v2\b.kad.KeyR\x03key\x12#\n" +
	"\x05value\x18\x03 \x01(\v2\r.kad.NFTValueR\x05value\x12\x19\n" +
	"\bttl_secs\x18\x04 \x01(\x05R\attlSecs\"\x1a\n" +
	"\bStoreRes\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"3\n" +
	"\x0eGetNodeListReq\x12!\n" +
	"\frequester_id\x18\x01 \x01(\tR\vrequesterId\"1\n" +
	"\x0eGetNodeListRes\x12\x1f\n" +
	"\x05nodes\x18\x01 \x03(\v2\t.kad.NodeR\x05nodes\"C\n" +
	"\fLookupNFTReq\x12\x17\n" +
	"\afrom_id\x18\x01 \x01(\tR\x06fromId\x12\x1a\n" +
	"\x03key\x18\x02 \x01(\v2\b.kad.KeyR\x03key\"\x91\x01\n" +
	"\fLookupNFTRes\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12!\n" +
	"\x06holder\x18\x02 \x01(\v2\t.kad.NodeR\x06holder\x12#\n" +
	"\x05value\x18\x03 \x01(\v2\r.kad.NFTValueR\x05value\x12#\n" +
	"\anearest\x18\x04 \x03(\v2\t.kad.NodeR\anearest\"2\n" +
	"\rGetKBucketReq\x12!\n" +
	"\frequester_id\x18\x01 \x01(\tR\vrequesterId\"1\n" +
	"\x0eGetKBucketResp\x12\x1f\n" +
	"\x05nodes\x18\x01 \x03(\v2\t.kad.NodeR\x05nodes\"(\n" +
	"\aPingReq\x12\x1d\n" +
	"\x04from\x18\x01 \x01(\v2\t.kad.NodeR\x04from\"K\n" +
	"\aPingRes\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x17\n" +
	"\aunix_ms\x18\x03 \x01(\x03R\x06unixMs\"6\n" +
	"\x0fUpdateBucketReq\x12#\n" +
	"\acontact\x18\x01 \x01(\v2\t.kad.NodeR\acontact\"!\n" +
	"\x0fUpdateBucketRes\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"Z\n" +
	"\fRebalanceReq\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\tR\btargetId\x12\x1f\n" +
	"\x05nodes\x18\x02 \x03(\v2\t.kad.NodeR\x05nodes\x12\f\n" +
	"\x01k\x18\x03 \x01(\x05R\x01k\"R\n" +
	"\fRebalanceRes\x12\x14\n" +
	"\x05moved\x18\x01 \x01(\x05R\x05moved\x12\x12\n" +
	"\x04kept\x18\x02 \x01(\x05R\x04kept\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xe7\x02\n" +
	"\bKademlia\x12%\n" +
	"\x05Store\x12\r.kad.StoreReq\x1a\r.kad.StoreRes\x127\n" +
	"\vGetNodeList\x12\x13.kad.GetNodeListReq\x1a\x13.kad.GetNodeListRes\x121\n" +
	"\tLookupNFT\x12\x11.kad.LookupNFTReq\x1a\x11.kad.LookupNFTRes\x125\n" +
	"\n" +
	"GetKBucket\x12\x12.kad.GetKBucketReq\x1a\x13.kad.GetKBucketResp\x12\"\n" +
	"\x04Ping\x12\f.kad.PingReq\x1a\f.kad.PingRes\x12:\n" +
	"\fUpdateBucket\x12\x14.kad.UpdateBucketReq\x1a\x14.kad.UpdateBucketRes\x121\n" +
	"\tRebalance\x12\x11.kad.RebalanceReq\x1a\x11.kad.RebalanceResB\x0fZ\rproto/kad;kadb\x06proto3"

var (
	file_proto_kad_proto_rawDescOnce sync.Once
	file_proto_kad_proto_rawDescData []byte
)

func file_proto_kad_proto_rawDescGZIP() []byte {
	file_proto_kad_proto_rawDescOnce.Do(func() {
		file_proto_kad_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_kad_proto_rawDesc), len(file_proto_kad_proto_rawDesc)))
	})
	return file_proto_kad_proto_rawDescData
}

var file_proto_kad_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_kad_proto_goTypes = []any{
	(*Node)(nil),            // 0: kad.Node
	(*Key)(nil),             // 1: kad.Key
	(*NFTValue)(nil),        // 2: kad.NFTValue
	(*StoreReq)(nil),        // 3: kad.StoreReq
	(*StoreRes)(nil),        // 4: kad.StoreRes
	(*GetNodeListReq)(nil),  // 5: kad.GetNodeListReq
	(*GetNodeListRes)(nil),  // 6: kad.GetNodeListRes
	(*LookupNFTReq)(nil),    // 7: kad.LookupNFTReq
	(*LookupNFTRes)(nil),    // 8: kad.LookupNFTRes
	(*GetKBucketReq)(nil),   // 9: kad.GetKBucketReq
	(*GetKBucketResp)(nil),  // 10: kad.GetKBucketResp
	(*PingReq)(nil),         // 11: kad.PingReq
	(*PingRes)(nil),         // 12: kad.PingRes
	(*UpdateBucketReq)(nil), // 13: kad.UpdateBucketReq
	(*UpdateBucketRes)(nil), // 14: kad.UpdateBucketRes
	(*RebalanceReq)(nil),    // 15: kad.RebalanceReq
	(*RebalanceRes)(nil),    // 16: kad.RebalanceRes
}
var file_proto_kad_proto_depIdxs = []int32{
	0,  // 0: kad.StoreReq.from:type_name -> kad.Node
	1,  // 1: kad.StoreReq.key:type_name -> kad.Key
	2,  // 2: kad.StoreReq.value:type_name -> kad.NFTValue
	0,  // 3: kad.GetNodeListRes.nodes:type_name -> kad.Node
	1,  // 4: kad.LookupNFTReq.key:type_name -> kad.Key
	0,  // 5: kad.LookupNFTRes.holder:type_name -> kad.Node
	2,  // 6: kad.LookupNFTRes.value:type_name -> kad.NFTValue
	0,  // 7: kad.LookupNFTRes.nearest:type_name -> kad.Node
	0,  // 8: kad.GetKBucketResp.nodes:type_name -> kad.Node
	0,  // 9: kad.PingReq.from:type_name -> kad.Node
	0,  // 10: kad.UpdateBucketReq.contact:type_name -> kad.Node
	0,  // 11: kad.RebalanceReq.nodes:type_name -> kad.Node
	3,  // 12: kad.Kademlia.Store:input_type -> kad.StoreReq
	5,  // 13: kad.Kademlia.GetNodeList:input_type -> kad.GetNodeListReq
	7,  // 14: kad.Kademlia.LookupNFT:input_type -> kad.LookupNFTReq
	9,  // 15: kad.Kademlia.GetKBucket:input_type -> kad.GetKBucketReq
	11, // 16: kad.Kademlia.Ping:input_type -> kad.PingReq
	13, // 17: kad.Kademlia.UpdateBucket:input_type -> kad.UpdateBucketReq
	15, // 18: kad.Kademlia.Rebalance:input_type -> kad.RebalanceReq
	4,  // 19: kad.Kademlia.Store:output_type -> kad.StoreRes
	6,  // 20: kad.Kademlia.GetNodeList:output_type -> kad.GetNodeListRes
	8,  // 21: kad.Kademlia.LookupNFT:output_type -> kad.LookupNFTRes
	10, // 22: kad.Kademlia.GetKBucket:output_type -> kad.GetKBucketResp
	12, // 23: kad.Kademlia.Ping:output_type -> kad.PingRes
	14, // 24: kad.Kademlia.UpdateBucket:output_type -> kad.UpdateBucketRes
	16, // 25: kad.Kademlia.Rebalance:output_type -> kad.RebalanceRes
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_kad_proto_init() }
func file_proto_kad_proto_init() {
	if File_proto_kad_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_kad_proto_rawDesc), len(file_proto_kad_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kad_proto_goTypes,
		DependencyIndexes: file_proto_kad_proto_depIdxs,
		MessageInfos:      file_proto_kad_proto_msgTypes,
	}.Build()
	File_proto_kad_proto = out.File
	file_proto_kad_proto_goTypes = nil
	file_proto_kad_proto_depIdxs = nil
}
